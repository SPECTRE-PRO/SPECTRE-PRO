name: Update Star History in README

on:
  schedule:
    - cron: '0 0 * * *' # 每天 UTC 時間午夜運行
  push:
    branches: [ "main" ] # 您額外添加的推送觸發器
  workflow_dispatch: # 允許手動觸發

permissions:
  contents: write # 授予寫入儲存庫內容的權限

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch all repositories for spectre-pro # 請將 spectre-pro 替換為您的 GitHub 使用者名稱
        id: get_repos
        run: |
          # 這裡假設您的使用者名稱是 spectre-pro
          repos=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/users/spectre-pro/repos?per_page=100&sort=pushed&direction=desc" | \
            jq -r '.[] | select(.fork == false and .archived == false) | .full_name' | \
            tr '\n' ',')
          echo "::set-output name=repos_list::${repos%,}" # 移除末尾的逗號

      - name: Update Star History section in README.md
        run: |
          README_FILE="README.md" # 在此步驟範圍內定義 README_FILE
          NEW_REPOS="${{ steps.get_repos.outputs.repos_list }}"
          
          # 檢查 NEW_REPOS 是否為空，以防止創建不正確的 URL
          if [ -z "$NEW_REPOS" ]; then
            echo "No repositories found. Exiting."
            exit 0
          fi

          # 構建原始的 Star History URL
          RAW_STAR_HISTORY_URL_DARK="https://api.star-history.com/svg?repos=${NEW_REPOS}&type=Date&theme=dark"
          RAW_STAR_HISTORY_URL_LIGHT="https://api.star-history.com/svg?repos=${NEW_REPOS}&type=Date"

          # 使用 perl 進行多行替換
          perl -i -0777 -pe '
            BEGIN {
              my $dark_url = $ENV{NEW_DARK_URL};
              my $light_url = $ENV{NEW_LIGHT_URL};

              # 對 URL 中的特殊字符 (`&` 和替換定界符 `!`) 進行轉義
              $dark_url =~ s/([&!])/\\$1/g;
              $light_url =~ s/([&!])/\\$1/g;

              # 構建新的 <picture> 區塊內容。
              $new_picture_block = "<picture>\n <source media=\"(prefers-color-scheme: dark)\" srcset=\"$dark_url\" />\n <source media=\"(prefers-color-scheme: light)\" srcset=\"$light_url\" />\n <img alt=\"Star History Chart\" src=\"$light_url\" />\n</picture>";
            }
            # 查找並替換現有的 <picture> 區塊
            s!<picture>.*?<\/picture>!$new_picture_block!s;
          ' "$README_FILE"
        env: # 將 URL 作為環境變量傳遞給 Perl 腳本
          NEW_DARK_URL: "$RAW_STAR_HISTORY_URL_DARK"
          NEW_LIGHT_URL: "$RAW_STAR_HISTORY_URL_LIGHT"
          
      - name: Commit changes
        run: |
          README_FILE="README.md" # **重點：在此步驟範圍內重新定義 README_FILE**

          # 使用 git diff 檢查 README.md 是否有變化
          # git diff --quiet 返回 0 表示沒有變化，返回 1 表示有變化
          if git diff --quiet "$README_FILE"; then
            echo "No changes detected in README.md."
          else
            echo "README.md has been updated. Committing changes."
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add "$README_FILE"
            git commit -m "🤖 Update Star History for new repositories"
            git push
          fi
